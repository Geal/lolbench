---

- name: why dont we do it in the site.yml
  hosts: all
  remote_user: adam
  become: yes
  become_method: sudo
  tasks:
    # - name: apt - update
    #   apt:
    #     update_cache: yes
    # - name: apt - upgrade
    #   apt:
    #     upgrade: yes
    - name: install packages
      apt:
        name: '{{ packages }}'
      vars:
        packages:
          - cpufrequtils
          - ufw
    - name: firewall - allow ssh
      ufw:
        rule: allow
        port: ssh
    - name: firewall - enable
      ufw:
        state: enabled
        policy: deny
    - name: apt - clean up
      apt:
        autoremove: yes
    - name: apt - more aggressive cleanup
      apt:
        autoclean: yes
    - name: relax perf_event_paranoid
      command: echo 1 > /proc/sys/kernel/perf_event_paranoid
    - name: disable cpu frequency scaling
      copy:
        src: cpufrequtils.default
        dest: /etc/default/cpufrequtils
        owner: root
        group: root
        mode: 0644
    - name: restart cpufrequtils
      systemd:
        name: cpufrequtils
        daemon_reload: yes
        state: restarted
        no_block: yes
    - name: passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

# Guaranteeing CPU affinity:

# For linux, the run.sh script uses https://github.com/lpechacek/cpuset to reserve CPUs for the benchmark runners.

# NOTE: you have to run as root. I tried to use cpuset's "exec as user/group" feature, but rustup had problems with that (thought that /root/.cargo was where it should be installed). For me, this meant `rustup default stable && rustup update` as root and everything worked.

# cpuset has a fun trick to move all kernel threads onto the not-used-for-benchmarks core too, which in theory should greatly improve predictability of results.

# - name: deploy supervisor configuration
#   hosts: phoromatic
#   remote_user: adam
#   become: yes
#   become_method: sudo
# # ufw allow 'Nginx Full'
# # add-apt-repository ppa:certbot/certbot
# # apt-get install python-certbot-nginx
# # certbot --nginx -d lolbench.rust.af
# # cronjob
# # systemctl reload nginx
# # systemctl restart php5.6-fpm
# # apt-get install php5.6-fpm
# # chown pts-data to www-data
# # ln -s /mnt/volume_sfo2_02/pts-data /var/www/.phoronix-test-suite
# # su -l www-data -c 'phoronix-test-suite phoromatic.set-root-admin-password'

# # vim /var/www/.phoronix-test-suite/user-config.xml
# # vim /etc/nginx/sites-available/default
# # vim /etc/php/5.6/fpm/php.ini

# - name: deploy runner configuration
#   hosts: runners
#   remote_user: adam
#   become: yes
#   become_method: sudo
# phoronix-test-suite phoromatic.connect lolbench.rust.af:443/17GUMY
