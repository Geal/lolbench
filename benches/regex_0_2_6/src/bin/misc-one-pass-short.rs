//{"name":"misc :: one_pass_short","crate":"regex_0_2_6","checksum":{"method":"sha256-generic-array","value":[116,116,149,251,86,40,59,76,49,141,169,53,0,61,94,106,107,98,24,178,82,118,253,135,227,92,169,92,132,52,52,122]}}
extern crate regex_0_2_6 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; regex_0_2_6 :: misc :: one_pass_short ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; regex_0_2_6 :: misc :: one_pass_short ( & mut crit ) ; }