//{"name":"pythagoras :: euclid_parallel_one","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[58,226,44,228,116,221,64,149,144,156,249,232,203,38,216,30,203,206,34,5,187,197,138,156,63,248,201,226,15,3,165,197]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: pythagoras :: euclid_parallel_one ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: pythagoras :: euclid_parallel_one ( & mut crit ) ; }