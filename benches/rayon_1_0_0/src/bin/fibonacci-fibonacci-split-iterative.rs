//{"name":"fibonacci :: fibonacci_split_iterative","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[84,251,188,217,114,92,63,66,200,154,187,253,242,122,152,51,86,140,45,92,215,6,128,36,180,207,121,116,118,20,8,126]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: fibonacci :: fibonacci_split_iterative ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: fibonacci :: fibonacci_split_iterative ( & mut crit ) ; }