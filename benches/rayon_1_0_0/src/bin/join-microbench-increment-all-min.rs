//{"name":"join_microbench :: increment_all_min","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[89,185,254,195,75,55,58,127,157,153,236,73,56,40,160,44,1,137,23,39,253,69,30,142,141,138,26,5,238,30,230,46]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: join_microbench :: increment_all_min ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: join_microbench :: increment_all_min ( & mut crit ) ; }