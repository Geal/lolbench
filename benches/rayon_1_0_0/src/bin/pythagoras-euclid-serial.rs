//{"name":"pythagoras :: euclid_serial","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[138,91,75,206,49,173,197,248,181,246,35,99,138,107,81,87,20,18,185,177,177,169,217,68,97,123,169,47,16,165,134,93]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: pythagoras :: euclid_serial ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: pythagoras :: euclid_serial ( & mut crit ) ; }