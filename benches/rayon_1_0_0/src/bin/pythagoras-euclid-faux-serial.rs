//{"name":"pythagoras :: euclid_faux_serial","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[55,23,182,18,235,224,0,19,3,148,163,205,217,15,124,51,210,220,131,138,193,116,142,219,4,170,245,241,161,97,65,137]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: pythagoras :: euclid_faux_serial ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: pythagoras :: euclid_faux_serial ( & mut crit ) ; }