//{"name":"find :: serial_find_last","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[38,167,223,8,229,76,20,126,127,105,96,51,16,67,235,120,128,179,4,47,62,149,116,72,10,248,114,231,108,167,71,108]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: find :: serial_find_last ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: find :: serial_find_last ( & mut crit ) ; }