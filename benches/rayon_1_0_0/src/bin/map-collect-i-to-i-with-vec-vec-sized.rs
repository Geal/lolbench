//{"name":"map_collect::i_to_i :: with_vec_vec_sized","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[108,139,73,64,128,84,170,237,163,200,0,31,207,89,172,159,36,28,36,206,13,126,255,179,35,92,237,52,250,207,88,130]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: map_collect :: i_to_i :: with_vec_vec_sized ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: map_collect :: i_to_i :: with_vec_vec_sized ( & mut crit ) ; }