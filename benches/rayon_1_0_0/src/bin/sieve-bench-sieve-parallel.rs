//{"name":"sieve::bench :: sieve_parallel","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[83,132,8,160,231,103,93,52,40,0,254,83,181,234,123,131,205,180,128,246,139,83,240,124,209,62,21,18,155,31,124,93]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: sieve :: bench :: sieve_parallel ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: sieve :: bench :: sieve_parallel ( & mut crit ) ; }