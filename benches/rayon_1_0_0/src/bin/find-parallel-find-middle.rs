//{"name":"find :: parallel_find_middle","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[194,85,26,160,132,11,114,38,205,166,197,125,85,30,195,125,86,84,49,129,105,168,20,132,43,215,157,239,245,127,45,98]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: find :: parallel_find_middle ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: find :: parallel_find_middle ( & mut crit ) ; }