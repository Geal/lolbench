//{"name":"mergesort::bench :: merge_sort_seq_bench","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[227,179,180,127,82,2,239,76,33,0,154,182,223,205,3,106,58,0,207,132,115,157,146,169,56,232,104,84,90,26,63,26]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: mergesort :: bench :: merge_sort_seq_bench ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: mergesort :: bench :: merge_sort_seq_bench ( & mut crit ) ; }