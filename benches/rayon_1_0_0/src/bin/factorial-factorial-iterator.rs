//{"name":"factorial :: factorial_iterator","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[78,124,82,231,13,4,207,88,116,28,6,69,147,40,76,129,230,237,98,159,250,0,162,28,92,50,137,222,138,32,179,40]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: factorial :: factorial_iterator ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: factorial :: factorial_iterator ( & mut crit ) ; }