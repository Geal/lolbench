//{"name":"life::bench :: parallel_generations","crate":"rayon_1_0_0","checksum":{"method":"sha256-generic-array","value":[12,208,38,26,99,161,164,153,149,219,246,102,227,130,44,7,8,233,54,183,116,117,62,92,89,89,26,157,119,209,117,179]}}
extern crate rayon_1_0_0 ; extern crate lolbench_support ; use lolbench_support :: { criterion_from_env , init_logging } ; fn main ( ) { init_logging ( ) ; let mut crit = criterion_from_env ( ) ; rayon_1_0_0 :: life :: bench :: parallel_generations ( & mut crit ) ; } # [ test ] fn run_bench ( ) { use std :: default :: Default ; use std :: time :: Duration ; use lolbench_support :: Criterion ; init_logging ( ) ; let mut crit = Criterion :: default ( ) ; crit = crit . sample_size ( 2 ) ; crit = crit . warm_up_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . measurement_time ( Duration :: from_micros ( 1 ) ) ; crit = crit . nresamples ( 1 ) ; rayon_1_0_0 :: life :: bench :: parallel_generations ( & mut crit ) ; }